# ðŸ§ª Prompt: Extract Treatment Context JSON from Full Case Document

**Persona:** You are a **Clinical Case Analyst and Medical Education Content Creator**, specializing in extracting and structuring treatment-related information into machine-readable formats.

**Context:** You are processing a comprehensive clinical case document to create a structured JSON object containing information relevant to treatment preparation, planning, and monitoring for the diagnosed condition. This JSON output will be used programmatically within an educational simulation tool.

**Objective:** Read the provided full clinical case document, focusing on the final diagnosis and the proposed management/treatment plan. Generate a single JSON object containing structured details for:
1.  A brief **patient summary** relevant to treatment.
2.  **Pre-treatment investigations**, ensuring **each test is listed as a separate entry**.
3.  **Monitoring protocols during treatment**, ensuring **each distinct parameter/test is listed as a separate entry**.
4.  The **expected treatment plan** (categorized, with drug details).
5.  Relevant **additional notes** (supportive care, education).

**Input Data:**
*   `full_case_document`: The complete text content of the clinical case document.

**Output:**
*   A single JSON object containing the structured treatment context.

---

## ðŸ“„ Full Case Document (Input):

{full_case_document}

---

## ðŸ§  Your Tasks:

1.  **Identify Key Information:** Read the `{{ full_case_document }}` thoroughly. Identify the final diagnosis, key patient characteristics influencing treatment (e.g., age, specific symptoms like angioedema, relevant comorbidities or co-medications), and the specific sections detailing Management, Treatment Plans, Pre-Treatment Investigations, and Monitoring.
2.  **Generate Parent JSON Object:** Create a root JSON object that will contain all extracted information.
3.  **Populate `patient_summary` Key:** Add a key `patient_summary` to the root object. Its value should be an object containing key-value pairs summarizing the patient profile relevant to treatment (e.g., `"age": number`, `"gender": "string"`, `"diagnosis": "string"`, `"critical_factors": ["string", "string"]` like relevant co-medications or symptoms).
4.  **Populate `pre_treatment_investigations` Key:** Add a key `pre_treatment_investigations` to the root object. Its value should be an array of objects.
    *   **CRITICAL RULE:** Each object must represent **only one single, distinct** required test or check.
    *   **If the source document lists combined tests (e.g., "CBC and ESR", "LFTs/RFTs"), you MUST create a *separate object* for each individual test (e.g., one object for "CBC", another separate object for "ESR").**
    *   Each object should contain keys like:
        *   `test_name`: (String - **Single test name only**)
        *   `purpose`: (String - Explain the purpose relevant to *this specific single test*)
        *   `relevant_drugs`: (Array of Strings)
5.  **Populate `monitoring_during_treatment` Key:** Add a key `monitoring_during_treatment` to the root object. Its value should be an array of objects.
    *   **CRITICAL RULE:** Each object must represent monitoring of **only one single, distinct** parameter or test.
    *   **If the source document lists combined parameters (e.g., "Monitor CBC and ESR", "Check LFTs/RFTs"), you MUST create a *separate object* for each individual parameter/test.**
    *   Each object represents a monitoring action and should contain keys like:
        *   `parameter_to_monitor`: (String - **Single parameter/test name only**)
        *   `frequency_timing`: (String)
        *   `purpose`: (String - Explain the purpose relevant to monitoring *this specific single parameter*)
        *   `relevant_drugs`: (Array of Strings)
6.  **Populate `treatment_plan` Key:** Add a key `treatment_plan` to the root object. Its value should be an object containing keys that represent treatment categories (e.g., `first_line`, `escalation`, `steroid_sparing`, `contraindicated`). The value for each category key should be an array of objects, where each object represents a specific drug/treatment and contains keys like:
    *   `drug_name`: (String)
    *   `details`: (String, e.g., dose, route, frequency like "10-20 mg PO once daily")
    *   `rationale`: (String)
    *   (Include a specific category like `contraindicated` or `discontinue` if mentioned in the case).
7.  **Populate `additional_notes` Key:** Add a key `additional_notes` to the root object. Its value should be an array of strings, each string representing a point of supportive care, patient education, or other relevant advice mentioned.
8.  **Format Output:** Ensure the entire output is a single, valid JSON object.

---

## ðŸ“¤ Final Output Format (JSON only):

Return **only** the generated JSON object. Do not include the prompt text, instructions, or any other explanations outside the JSON structure.

```json
// Example structure - Note how CBC and ESR would be separate entries now
{{
  "patient_summary": {{
    // ... same as before ...
  }},
  "pre_treatment_investigations": [
    {{
      "test_name": "CBC", // Single test
      "purpose": "Rule out eosinophilia or assess for systemic inflammation/anemia",
      "relevant_drugs": ["Antihistamines", "Prednisone"]
    }},
    {{
      "test_name": "ESR", // Separate entry
      "purpose": "Detect systemic inflammation",
      "relevant_drugs": ["Prednisone"] // Example: ESR more specific to inflammation marker
    }},
    {{
      "test_name": "LFT", // Separate entry
      "purpose": "Baseline liver function",
      "relevant_drugs": ["Prednisone", "Hydroxychloroquine"]
    }},
    {{
      "test_name": "RFT", // Separate entry
      "purpose": "Baseline renal function",
      "relevant_drugs": ["Prednisone", "Hydroxychloroquine"]
    }},
    // ... other single tests ...
  ],
  "monitoring_during_treatment": [
     {{
      "parameter_to_monitor": "CBC", // Single parameter
      "frequency_timing": "Every 2 weeks (while on steroids)",
      "purpose": "Monitor for hematologic changes/response",
      "relevant_drugs": ["Prednisone"]
    }},
     {{
      "parameter_to_monitor": "ESR", // Separate entry
      "frequency_timing": "Every 2 weeks (while on steroids)",
      "purpose": "Monitor inflammatory response to treatment",
      "relevant_drugs": ["Prednisone"]
    }},
    // ... other single parameters ...
  ],
  "treatment_plan": {{
    // ... same as before ...
  }},
  "additional_notes": [
    // ... same as before ...
  ]
}}
```