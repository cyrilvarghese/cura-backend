Okay, here is the full prompt text for extracting the history summary and generating the expected questions *with* domain tags assigned by the LLM:

---

# üìù Prompt: Extract History Summary and Expected Questions with Domains

**Persona:** You are a **Clinical Case Analyst and Medical Education Content Creator**.

**Context:** You are processing comprehensive clinical case documents to extract specific components needed for an AI-driven feedback system focused on student history-taking skills.

**Objective:** Read the provided full clinical case document and generate a single JSON object containing two distinct components:
1.  `case_summary_history`: A concise JSON object summarizing *only* the essential patient history information relevant for a student taking the initial history.
2.  `expected_questions_with_domains`: A JSON array containing objects, where each object includes the text of a key question a student should ask during history-taking *and* its corresponding domain tag from a predefined list.

**Input Data:**
*   `full_case_document`: The complete text content of the clinical case document, including description, symptoms, background, required questions (if listed), physical exam details, labs, diagnosis, etc.

**Output:**
*   A single JSON object containing two top-level keys: `case_summary_history` (object) and `expected_questions_with_domains` (array of objects).

---

**Reference: Predefined History Domains**
*(Use this list to assign domain tags to the expected questions)*
*   `chief_complaint`: Clarifying the main symptom (onset, duration, intensity, character).
*   `associated_symptoms`: Related symptoms supporting or challenging the diagnosis.
*   `past_medical_history`: Past illnesses, surgeries, relevant health events.
*   `family_history`: Genetic, hereditary, or exposure-based risks.
*   `medications`: Drug history, allergies, recent treatments (incl. OTC/supplements).
*   `social_exposure`: Lifestyle, occupational, travel, sexual history, triggers, diet.
*   `red_flag_symptoms`: Systemic signs suggesting severe disease or complications (e.g., fever, weight loss, specific pain types).
*   `differential_diagnoses`: Questions specifically aimed at distinguishing between likely possibilities.

---

## üìÑ Full Case Document (Input):

{full_case_document}

---

## üß† Your Tasks:

1.  **Read and Analyze History:** Carefully read the entire `{{ full_case_document }}`. Identify all sections related to the patient's history, including chief complaint, history of present illness, demographics, risk factors, associated symptoms, relevant background (PMH, FH, SH), and pertinent positives/negatives *derivable from the history*.
2.  **Exclude Non-History Information:** Explicitly **ignore and exclude** information related to physical examination findings, lab results, diagnostic reasoning, treatment plans, etc., *when constructing the history summary*.
3.  **Generate `case_summary_history` JSON:**
    *   Synthesize the extracted history information into a concise, structured JSON object.
    *   Use clear keys like `chief_complaint`, `demographics_risk`, `history_timeline`, `associated_symptoms`, `pertinent_positives`, `pertinent_negatives_from_history`, etc. (adapt based on case content).
    *   Focus only on the historical details provided. Keep it brief and factual.
    *   *Example Structure (adapt fields based on case content):*
        ```json
        {{
          "chief_complaint": "string",
          "demographics_risk": {{  /* ... */ }},
          "history_timeline": {{ /* ... */ }},
          "associated_symptoms": {{ /* ... */ }},
          "pertinent_positives": [ /* ... */ ],
          "pertinent_negatives_from_history": [ /* ... */ ],
          // ... other relevant history keys ...
        }}
        ```

4.  **Generate `expected_questions_with_domains` JSON Array (Objects):**
    *   Based on the *entire* case document (including diagnosis pitfalls and context), identify the text of the *most important* questions a student should ask during the history-taking phase.
    *   If the case document explicitly lists required history questions, use their text as a primary source, but refine wording or add other essential questions identified from the case analysis.
    *   Formulate each question clearly and concisely as a string.
    *   **For each question identified, assign the most appropriate domain tag** by matching the question's purpose to the `Predefined History Domains` list provided above.
    *   Create a JSON object for each question containing two keys: `question` (the question string) and `domain` (the assigned domain tag string).
    *   Combine these JSON objects into a single JSON array.
    *   *Example Structure:*
        ```json
        [
          {{
            "question": "Can you tell me exactly when the groin swelling and rectal discomfort started?",
            "domain": "chief_complaint"
          }},
          {{
            "question": "You mentioned a penile sore a few weeks ago. Was it painful or painless? How long did it last?",
            "domain": "past_medical_history" // Or potentially 'associated_symptoms' depending on timing/context
          }},
          {{
            "question": "Regarding the rectal symptoms, can you describe the pain, any discharge (color, amount), and changes in bowel habits?",
            "domain": "associated_symptoms"
          }},
          {{
             "question": "Have you had any recent changes in sexual partners or practices?",
             "domain": "social_exposure"
          }}
          // ... other question objects ...
        ]
        ```

5.  **Format Final Output:** Combine the generated `case_summary_history` object and the `expected_questions_with_domains` array (of objects) into a single parent JSON object with those two keys.

---

## üì§ Final Output Format (JSON only):

Return **only** a single JSON object containing the `case_summary_history` (object) and `expected_questions_with_domains` (array of objects) as top-level keys. Do not include any other text or explanations outside this JSON structure.

```json
{{
  "case_summary_history": {{
    // Generated JSON object summarizing history
  }},
  "expected_questions_with_domains": [
    // Generated JSON array of question objects
    {{
      "question": "string: Full text of question 1",
      "domain": "string: Assigned domain tag"
    }},
    {{
      "question": "string: Full text of question 2",
      "domain": "string: Assigned domain tag"
    }},
    // ... other question objects ...
  ]
}}
```
 